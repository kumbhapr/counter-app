# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Deployment Environment'
        options:
        - Staging
        - StagingRef
        default: 'Staging'

jobs:
  staging-build:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: |
          git tag staging-${{github.run_id}}
          git push origin staging-${{github.run_id}}
    - run: aws s3 cp $GITHUB_WORKSPACE/build s3://pdk-react-app/ --region ap-south-1 --recursive

  stagingref-build:
    if: ${{ github.event.inputs.message }} == 'stagingRef'
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: |
          git tag ${{ github.event.inputs.message }}-${{github.run_id}}
          git push origin ${{ github.event.inputs.message }}-${{github.run_id}}
    - run: aws s3 cp $GITHUB_WORKSPACE/build s3://pdk-react-app/ --region ap-south-1 --recursive
